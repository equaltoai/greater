# Cloudflare Pages Configuration
name = "greater"
compatibility_date = "2024-01-01"
compatibility_flags = ["nodejs_compat"]

# Pages build configuration
[build]
command = "npm run build"

# Pages-specific configuration
pages_build_output_dir = "dist"

# Development environment bindings
# Note: For Pages, these are configured differently than Workers
# You'll need to use `wrangler pages secret` and dashboard for production

# Local development bindings (for wrangler pages dev)
[vars]
ENVIRONMENT = "development"
API_VERSION = "v1"

# KV Namespaces - These need to be created first with:
# wrangler kv:namespace create "SESSIONS"
# wrangler kv:namespace create "CACHE"
# wrangler kv:namespace create "PREFERENCES"
[[kv_namespaces]]
binding = "SESSIONS"
# Replace with actual ID from creation command
id = "YOUR_SESSIONS_KV_ID"

[[kv_namespaces]]
binding = "CACHE"
# Replace with actual ID from creation command
id = "YOUR_CACHE_KV_ID"

[[kv_namespaces]]
binding = "PREFERENCES"
# Replace with actual ID from creation command
id = "YOUR_PREFERENCES_KV_ID"

[[kv_namespaces]]
binding = "OFFLINE"
# Replace with actual ID from creation command
id = "YOUR_OFFLINE_KV_ID"

# R2 Buckets - Create with:
# wrangler r2 bucket create greater-media
# wrangler r2 bucket create greater-static
[[r2_buckets]]
binding = "MEDIA"
bucket_name = "greater-media"

[[r2_buckets]]
binding = "STATIC"
bucket_name = "greater-static"

# D1 Databases - Create with:
# wrangler d1 create greater-analytics
[[d1_databases]]
binding = "ANALYTICS"
database_name = "greater-analytics"
# Replace with actual ID from creation command
database_id = "YOUR_D1_DATABASE_ID"

# Durable Objects - For Pages, configure in dashboard
# [[durable_objects.bindings]]
# name = "WEBSOCKET"
# class_name = "WebSocketHandler"
# script_name = "websocket-handler"

# Note: Routes are configured in Cloudflare Pages dashboard
# Custom domains, preview URLs, etc. are managed there

# Analytics Engine binding (optional)
# [[analytics_engine_datasets]]
# binding = "ANALYTICS_ENGINE"
# dataset = "greater_analytics"

# Browser Rendering binding (optional, for screenshots)
# [browser]
# binding = "BROWSER"